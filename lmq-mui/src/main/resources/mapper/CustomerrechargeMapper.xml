<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.CustomerrechargeMapper">
  <resultMap id="BaseResultMap" type="com.lmq.domain.Customerrecharge">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Time" jdbcType="TIMESTAMP" property="time" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="async" jdbcType="INTEGER" property="async" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, Time, money, cid, status, async, uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customerrecharge
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customerrecharge
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lmq.domain.Customerrecharge">
    insert into customerrecharge (Id, Time, money, 
      cid, status, async, 
      uid)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{money,jdbcType=DOUBLE}, 
      #{cid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{async,jdbcType=INTEGER}, 
      #{uid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lmq.domain.Customerrecharge">
    insert into customerrecharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="time != null">
        Time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="async != null">
        async,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmq.domain.Customerrecharge">
    update customerrecharge
    <set>
      <if test="time != null">
        Time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        async = #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmq.domain.Customerrecharge">
    update customerrecharge
    set Time = #{time,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DOUBLE},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      async = #{async,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>